@model gender.Model.Document
@{
    ViewBag.Title = Model.Header;
    ViewBag.Keywords = Model.Keywords;
    Layout = "~/Areas/Default/Views/Shared/_Layout.cshtml";
    var currentUser = ((gender.Controllers.BaseController)ViewContext.Controller).CurrentUser;
}
@section header {
    <script type="text/javascript" src="/Scripts/default/slide-subject.js"></script>
    <script type="text/javascript" src="/Scripts/default/comment.js"></script>
    <script type="text/javascript" src="/Scripts/default/like.js"></script>
    <script type="text/javascript">
        $().ready(function () {
            comment.ajaxComment = "/Document/CreateComment";
        });
    </script>
}
<div class="container">
    <div class="row">
        <div class="span12">
            <h3 class="section-header"><i class="icon-file"></i>&nbsp;<a href="@Url.Action("Index", "Document")">Документы</a>
            </h3>
        </div>
        @if (Model.ModeratedDate.HasValue || (currentUser != null && currentUser.CanEdit(Model)))
        {
            <div class="span8">
                <div class="single-post-w">
                    <h2 class="post-title">@Model.Header
                        @if (currentUser != null && currentUser.CanEdit(Model))
                        {
                            <a href="@Url.Action("Edit", "Document", new { id = Model.ID })">
                                <sup><i class="icon-edit"></i></sup>
                            </a>
                        }
                        @if (currentUser != null && currentUser.CanDelete(Model))
                        {
                            <a href="@Url.Action("Delete", "Document", new { id = Model.ID })">
                                <sup><i class="icon-remove delete-action"></i></sup>
                            </a>
                        }
                    </h2>
                    @if (Model.SubOrganizations.Any())
                    {
                        <p class="post-info clearfix no-border">
                            <span class="info-item">Принявший орган:
                          @foreach (var item in Model.SubOrganizations)
                          {
                              <a href="@Url.Action("Item", "Organization", new { url = item.Url })"><i class="icon-group">
                              </i>&nbsp;@item.Name</a>
                          }
                            </span>
                        </p>
                    }
                    @if (Model.EventID.HasValue)
                    {
                        <p class="post-info clearfix no-border">
                            <span class="info-item">Событие:
                              <i class="icon-flag"></i>&nbsp;<a href="@Url.Action("Item", "Event", new { url = Model.Event.Url })">@Model.Event.Header</a>
                            </span>
                        </p>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Teaser))
                    {
                        <div class="widget-filled widget-yellow">
                            @Html.Raw(Model.Teaser.NlToP())
                        </div>
                    }
                    @if (Model.SubLinks.Any())
                    {
                        <p class="post-info clearfix no-border">
                            <span class="info-item">Читать на :
                      @foreach (var item in Model.SubLinks)
                      {
                          <a href="@item.Url" target="_blank">
                              <img src="@item.Icon" />&nbsp;@item.Title</a>   
                      }
                            </span>
                        </p>
                    }
                    <div class="post-content">
                        @Html.Raw(Model.Content)
                    </div>
                    @if (Model.SubFiles.Any())
                    {
                        <p class="post-info clearfix no-border">
                            <span class="info-item">Скачать:
                        @foreach (var item in Model.SubFiles)
                        {
                            <a href="@item.Path" target="_blank">@Html.Action("MimeType", "Home", new { mime = item.MimeType })&nbsp;@item.Name</a>
                        }
                            </span>
                        </p>
                    }
                    <div class="pull-right">
                        <strong>Добавил(а): @Model.User.Person.FullName</strong><br/>
                        <strong>Последнее обновление: @Model.ChangedDate.ToString("dd.MM.yyyy")</strong>
                    </div>
                    <div class="clearfix"></div>
                </div>
                <div class="white-card document-like-wrapper">
                    @Html.Partial("DocumentLike", Model)
                </div>
                <div class="addthis-wrapper">
                    @Html.Partial("AddThis")
                </div>
                @Html.Action("Comments", "Document", new { id = Model.ID })
            </div>
        
            <div class="span4">
                @if (currentUser != null)
                {
                    <button id="SubscribeCommentBtn" class="btn @(currentUser.IsCommentSubscribed(Model) ? "active" : "")" data-id="@Model.ID" data-type="Document">
                        @(currentUser.IsCommentSubscribed(Model) ? "Отписаться от комментариев" : "Подписаться на комментарии")
                    </button>
                }
                <div class="blog-side-bar clearfix">
                    <div class="blog-categories widget-tp">
                        <h3>Темы&nbsp;/&nbsp;Страны и регионы</h3>
                        <ul>
                            @foreach (var item in Model.SubSubjects)
                            {
                                <li>
                                    <a href="@Url.Action("Item", "Subject", new { path = item.FullUrl })"><i class="icon-tag">
                                    </i>&nbsp;@item.Name</a>
                                </li>    
                            }
                            @foreach (var item in Model.SubRegions)
                            {
                                <li>
                                    <a href="@Url.Action("Item", "Region", new { path = item.FullUrl })"><i class="icon-map-marker">
                                    </i>&nbsp;@item.Name</a>
                                </li>    
                            }
                        </ul>
                    </div>
                    <div id="AlsoSubjectWrapper" data-type="Document" data-id="@Model.ID">
                        @Html.Action("AlsoSubject", "Document", new { id = Model.ID })
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="span8">
                <h2>Материал на модерации</h2>
            </div>
        }
    </div>
</div>
